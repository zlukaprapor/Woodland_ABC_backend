from fastapi import FastAPI
from app.db.database import engine, Base
from app.api.v1.routes import auth, lesson, progress
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
from app.core.config import settings
from app.core.logger import logger

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—å —É –±–∞–∑—ñ –¥–∞–Ω–∏—Ö, —è–∫—â–æ –≤–æ–Ω–∏ —â–µ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω—ñ
Base.metadata.create_all(bind=engine)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è FastAPI –¥–æ–¥–∞—Ç–∫—É
app = FastAPI(
    title="Learning App API",
    description="API –¥–ª—è –Ω–∞–≤—á–∞–ª—å–Ω–æ–≥–æ –¥–æ–¥–∞—Ç–∫—É",
    version="1.0.0"
)

# –î–æ–¥–∞–≤–∞–Ω–Ω—è CORS middleware –¥–ª—è –¥–æ–∑–≤–æ–ª—É –∑–∞–ø–∏—Ç—ñ–≤ –∑ –ø–µ–≤–Ω–∏—Ö origin-—ñ–≤
app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.CORS_ORIGINS,  # –î–æ–∑–≤–æ–ª–µ–Ω—ñ –¥–∂–µ—Ä–µ–ª–∞ –∑–∞–ø–∏—Ç—ñ–≤
    allow_credentials=True,
    allow_methods=["*"],  # –î–æ–∑–≤–æ–ª–µ–Ω—ñ HTTP –º–µ—Ç–æ–¥–∏
    allow_headers=["*"],  # –î–æ–∑–≤–æ–ª–µ–Ω—ñ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)

# –ú–æ–Ω—Ç—É–≤–∞–Ω–Ω—è –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó –∑—ñ —Å—Ç–∞—Ç–∏—á–Ω–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏, —â–æ–± –≤–æ–Ω–∏ –±—É–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ –∑–∞ URL /uploads
app.mount("/uploads", StaticFiles(directory=settings.UPLOAD_DIRECTORY), name="media")

# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ä–æ—É—Ç–µ—Ä—ñ–≤ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —á–∞—Å—Ç–∏–Ω API –∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –ø—Ä–µ—Ñ—ñ–∫—Å–∞–º–∏ —ñ —Ç–µ–≥–∞–º–∏
app.include_router(auth.router, prefix="/api/v1/auth", tags=["–ê–≤—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—è"])
app.include_router(lesson.router, prefix="/api/v1/lessons", tags=["–£—Ä–æ–∫–∏"])
app.include_router(progress.router, prefix="/api/v1/progress", tags=["–ü—Ä–æ–≥—Ä–µ—Å"])

@app.get("/")
def root():
    """
    –ö–æ—Ä–µ–Ω–µ–≤–∏–π –µ–Ω–¥–ø–æ—ñ–Ω—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–æ—Å—Ç—ñ API.
    –ü–æ–≤–µ—Ä—Ç–∞—î —Å—Ç–∞—Ç—É—Å —Ä–æ–±–æ—Ç–∏ —Ç–∞ –≤–µ—Ä—Å—ñ—é API.
    """
    return {"status": "API –ø—Ä–∞—Ü—é—î", "version": "1.0.0"}

@app.on_event("startup")
async def startup_event():
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –∑–∞–ø—É—Å–∫—É –¥–æ–¥–∞—Ç–∫—É"""
    logger.info("üöÄ –ü—Ä–æ–≥—Ä–∞–º–∞ –∑–∞–ø—É—â–µ–Ω–∞")

@app.on_event("shutdown")
async def shutdown_event():
    """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –∑—É–ø–∏–Ω–∫–∏ –¥–æ–¥–∞—Ç–∫—É"""
    logger.info("üõë –ü—Ä–æ–≥—Ä–∞–º–∞ –∑—É–ø–∏–Ω–µ–Ω–∞")
